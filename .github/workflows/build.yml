# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Build

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
env:
  REGION_ID: cn-shanghai
  ACR_EE_REGISTRY: xom-ecomm-acr02-registry.cn-shanghai.cr.aliyuncs.com
  ACR_EE_INSTANCE_ID: cri-3fynibeigjxpi5o6
  ACR_EE_NAMESPACE: tootest
  ACR_EE_IMAGE: ch-user

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: GitHub SHA
      run: |
          echo GITHUB_SHA="$GITHUB_SHA"
          echo "VERSION=$GITHUB_SHA" >> $GITHUB_ENV
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'

    - name: Build with Gradle
      run: gradle bootBuildImage --imageName=$ACR_EE_REGISTRY/$ACR_EE_NAMESPACE/$ACR_EE_IMAGE:$VERSION
      
    - name: Login to ACR EE with the AccessKey pair
      uses: aliyun/acr-login@v1
      with:
        login-server: "https://${{ env.ACR_EE_REGISTRY }}"
        region-id: "${{ env.REGION_ID }}"
        access-key-id: "${{ secrets.ALICLOUD_ACCESS_KEY }}"
        access-key-secret: "${{ secrets.ALICLOUD_SECRET_KEY }}"
        instance-id: "${{ env.ACR_EE_INSTANCE_ID }}"

    - name: Build and push image to ACR EE
      run: |
        docker push "$ACR_EE_REGISTRY/$ACR_EE_NAMESPACE/$ACR_EE_IMAGE:$VERSION"

    - name: Generate secret from docker config
      run: |
        BASE64=$(cat ${{ env.DOCKER_CONFIG }}/config.json | base64 -w 0)
        sed -i "s/BASE64_CREDENTIAL/$BASE64/g" ./kubernetes/pullImageSecret.yml
        
    # Prepare k8s yaml files
    - name: Set variable to yaml files
      run: |
        sed -i "s/NAMESPACE/tootest/g" kubernetes/pullImageSecret.yml > kubernetes/pullImageSecret.yaml
        sed -i "s/NAMESPACE/tootest/g" kubernetes/deployment.yml > kubernetes/deployment.yaml
        sed -i "s/NAMESPACE/tootest/g" kubernetes/service.yml > kubernetes/service.yaml
    # Deploy to Ali ACK
    - name: Apply YAML
      uses: Consensys/kubernetes-action@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_ASK }}
      with:
        args: apply -R -f kubernetes/pullImageSecret.yaml -f kubernetes/deployment.yaml -f kubernetes/service.yaml
      
    - name: Wait for Deploy
        run: |
          kubectl rollout status -f kubernetes/deployment.yml
