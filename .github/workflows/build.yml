# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Build

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
env:
  REGION_ID: cn-shanghai
  ACR_EE_REGISTRY: xom-ecomm-acr02-registry.cn-shanghai.cr.aliyuncs.com
  ACR_EE_INSTANCE_ID: cri-3fynibeigjxpi5o6
  ACR_EE_NAMESPACE: tootest
  ACR_EE_IMAGE: ch-user
  VERSION: GITHUB_SHA

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: ls
      run: ls
    - name: GitHub SHA
      run: echo GITHUB_SHA="${{GITHUB_SHA}}"
#     - name: Set up JDK 8
#       uses: actions/setup-java@v2
#       with:
#         java-version: '8'
#         distribution: 'adopt'

#     - name: Build with Gradle
#       run: gradle bootBuildImage --imageName=xom-ecomm-acr02-registry.cn-shanghai.cr.aliyuncs.com/tootest/ch-user:0.0.1-SNAPSHOT
      
#     - name: Login to ACR EE with the AccessKey pair
#       uses: aliyun/acr-login@v1
#       with:
#         login-server: "https://${{ env.ACR_EE_REGISTRY }}"
#         region-id: "${{ env.REGION_ID }}"
#         access-key-id: "${{ secrets.ALICLOUD_ACCESS_KEY }}"
#         access-key-secret: "${{ secrets.ALICLOUD_SECRET_KEY }}"
#         instance-id: "${{ env.ACR_EE_INSTANCE_ID }}"

#     - name: Build and push image to ACR EE
#       run: |
#         docker push "$ACR_EE_REGISTRY/$ACR_EE_NAMESPACE/$ACR_EE_IMAGE:$VERSION"

#     - name: Generate secret from docker config
#       run: |
#         BASE64=$(cat ${{ env.DOCKER_CONFIG }}/config.json | base64 -w 0)
#         sed -i "s/BASE64_CREDENTIAL/$BASE64/g" ./kubernetes/pullImageSecret.yml
        
#     - name: Get github sha
#       run: |
#         GITHUB_SHA=$(git rev-parse HEAD)
#         sed -i "s/GITHUB_SHA/$GITHUB_SHA/g" ./kubernetes/deploy.yml
        
#     - name: Build and Push to ACR
#       uses: docker/build-push-action@v2
#       with:
#         context: .
#         push: true
#         tags: "${{ env.ACR_EE_REGISTRY }}/${{ env.ACR_EE_NAMESPACE }}/${{ env.ACR_EE_IMAGE }}:${{ github.sha }}"

